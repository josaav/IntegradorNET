// <auto-generated />
using System;
using IntegradorNET.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IntegradorNET.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230913044238_DbSetup")]
    partial class DbSetup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("IntegradorNET.Entities.Proyecto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codProyecto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("direccion");

                    b.Property<int>("Eliminado")
                        .HasColumnType("int")
                        .HasColumnName("eliminado");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("IntegradorNET.Entities.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codServicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("VARCHAR(200)")
                        .HasColumnName("descr");

                    b.Property<int>("Eliminado")
                        .HasColumnType("int")
                        .HasColumnName("eliminado");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("estado");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("valorHora");

                    b.HasKey("Id");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("IntegradorNET.Entities.Trabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CantHoras")
                        .HasColumnType("int")
                        .HasColumnName("cantHoras");

                    b.Property<decimal>("Costo")
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("costo");

                    b.Property<int>("Eliminado")
                        .HasColumnType("int")
                        .HasColumnName("eliminado");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("DATETIME")
                        .HasColumnName("fecha");

                    b.Property<decimal>("ValorHora")
                        .HasColumnType("DECIMAL(19,4)")
                        .HasColumnName("valorHora");

                    b.Property<int>("codProyecto")
                        .HasColumnType("int");

                    b.Property<int>("codServicio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("codProyecto");

                    b.HasIndex("codServicio");

                    b.ToTable("Trabajos");
                });

            modelBuilder.Entity("IntegradorNET.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("contrasena");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<int>("Eliminado")
                        .HasColumnType("int")
                        .HasColumnName("eliminado");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("IntegradorNET.Entities.Trabajo", b =>
                {
                    b.HasOne("IntegradorNET.Entities.Proyecto", "Proyecto")
                        .WithMany()
                        .HasForeignKey("codProyecto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntegradorNET.Entities.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("codServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proyecto");

                    b.Navigation("Servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
